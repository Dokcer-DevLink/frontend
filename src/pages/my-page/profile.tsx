import Head from 'next/head';
import { Header, MainLayout } from '@/components/Layout';
import { Button } from '@/components/Elements';
import { useRouter } from 'next/router';

import { FaArrowLeft } from 'react-icons/fa';
import { Buttons, Inner } from '@/styles/pageStyles/my-page/profile.style';
import { useEffect, useState } from 'react';
import { Profile } from '@/features/users';
import { UserPosts, VerticalPostProps, getMyPosts } from '@/features/posts';

import k8s from '@/assets/images/k8s.png';
import { MyMentorings } from '@/features/mentorings';
import { useSearchParams } from 'next/navigation';
import { useSelector } from 'react-redux';
import { PostType } from '@/features/posts/type';

export default function MyProfile() {
  const [selectedTap, setSelectedTap] = useState('profile');
  const [postsAsMentor, setPostsAsMentor] = useState<PostType[]>([]);
  const [postsAsMentee, setPostsAsMentee] = useState<PostType[]>([]);
  const searchParams = useSearchParams();

  const tap = searchParams.get('tap');
  useEffect(() => {
    if (tap === 'mentoring') {
      setSelectedTap('mentoring');
    }
  }, [tap]);
  const router = useRouter();

  const userUuid = useSelector(({ auth }) => auth.userUuid);
  const myProfile = useSelector(({ profile }) => profile);
  useEffect(() => {
    if (!userUuid) {
      router.push('/');
    }
  }, [router, userUuid]);

  useEffect(() => {
    (async () => {
      try {
        const result = await getMyPosts({ postType: 'MENTOR' });
        setPostsAsMentor(result.data.content);
      } catch (error) {
        console.error(error);
      }
    })();
    (async () => {
      try {
        const result = await getMyPosts({ postType: 'MENTEE' });
        setPostsAsMentee(result.data.content);
      } catch (error) {
        console.error(error);
      }
    })();
  }, []);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MainLayout>
        <Header
          title="내 프로필"
          leftbuttons={
            <Button
              textstyle="title"
              size="large"
              variant="background"
              padding="2px"
              startIcon={<FaArrowLeft />}
              onclick={() => router.back()}
            />
          }
        />
        <Inner>
          <Buttons>
            <Button
              isoutlined={selectedTap === 'profile' ? false : true}
              justifycontent="center"
              onclick={() => setSelectedTap('profile')}
            >
              내 프로필
            </Button>
            <Button
              isoutlined={selectedTap === 'post' ? false : true}
              justifycontent="center"
              onclick={() => setSelectedTap('post')}
            >
              게시물 목록
            </Button>
            <Button
              isoutlined={selectedTap === 'mentoring' ? false : true}
              justifycontent="center"
              onclick={() => setSelectedTap('mentoring')}
            >
              멘토링 목록
            </Button>
          </Buttons>
          {selectedTap === 'profile' ? (
            <Profile isMine={true} profileDetail={myProfile} />
          ) : selectedTap === 'post' ? (
            <UserPosts
              postsAsMentor={postsAsMentor}
              postsAsMentee={postsAsMentee}
            />
          ) : (
            <MyMentorings />
          )}
        </Inner>
      </MainLayout>
    </>
  );
}
