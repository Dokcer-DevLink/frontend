import React, { useState } from 'react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { FaArrowLeft } from 'react-icons/fa';

import { Button } from '@/components/Elements';
import { Header, MainLayout } from '@/components/Layout';
import { Buttons, Inner } from './index.style';
import { SearchForm, VerticalPosts, WritePost } from '@/features/posts';
import { useSearchParams } from 'next/navigation';

export default function Search() {
  const router = useRouter();
  const searchParams = useSearchParams();
  const list = searchParams.get('list');

  const [isMentor, setIsMentor] = useState<boolean>(true);
  const [isPosts, setIsPosts] = useState<boolean>(
    list === 'users' ? false : true
  );

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <MainLayout>
        <Header
          title="검색하기"
          leftbuttons={
            <Button
              textstyle="title"
              size="large"
              variant="background"
              padding="2px"
              startIcon={<FaArrowLeft />}
              onclick={() => router.back()}
            />
          }
        />
        <Inner>
          <SearchForm />
          <div>
            <Buttons>
              <Button
                borderradius="0"
                justifycontent="center"
                isoutlined={!isMentor}
                onclick={() => setIsMentor(true)}
              >
                멘토
              </Button>
              <Button
                borderradius="0"
                justifycontent="center"
                isoutlined={isMentor}
                onclick={() => setIsMentor(false)}
              >
                멘티
              </Button>
            </Buttons>
            <Buttons>
              <Button
                borderradius="0"
                justifycontent="center"
                isoutlined={!isPosts}
                onclick={() => setIsPosts(true)}
              >
                게시물 목록
              </Button>
              <Button
                borderradius="0"
                justifycontent="center"
                isoutlined={isPosts}
                onclick={() => setIsPosts(false)}
              >
                유저 목록
              </Button>
            </Buttons>
          </div>
          <VerticalPosts />
        </Inner>
      </MainLayout>
      <WritePost />
    </>
  );
}
